{"version":3,"file":"mongo.js","sourceRoot":"","sources":["../../db/mongo.ts"],"names":[],"mappings":"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","sourcesContent":["import { Collection, MongoClient, ObjectId } from 'mongodb';\nimport { Puppy } from 'type/puppy';\nimport 'dotenv/config'\n\nconst uri = process.env.MONGO_URL as string\nconsole.log(uri);\nconst client = new MongoClient(uri, {\n    tls: true,\n});\n\nlet db;\nlet puppies:Collection<Puppy>;\n\nconst createPuppy = (body:Puppy) => {\n    return {\n        breed: body.breed,\n        name: body.name,\n        birthDate: body.birthDate\n    }\n};\n\nconst init = async () => {\n    try {\n        await client.connect();\n        db = client.db('puppies-db');\n        db.command({ ping: 1 });\n        puppies = db.collection('puppies-collection');\n    } catch (e) {\n        console.error(e);\n    } finally {\n        setTimeout(() => {client.close()}, 1500)\n    }\n}\n\nexport const getAllPuppies = async () => {\n    await init();\n    const allPuppies = puppies.find().toArray();\n    return allPuppies;\n}\n\nexport const getOnePuppy = async (id:string) => {\n    await init();\n    const onePuppy = await puppies.findOne({\"_id\": new ObjectId(id)});\n    console.log(onePuppy);\n    return onePuppy;\n};\n\nexport const createOnePuppy = async (body:Puppy) => {\n    const addedPuppy = createPuppy(body);\n    await init();\n    await puppies.insertOne(addedPuppy);\n    return addedPuppy;\n};\n\nexport const updateOnePuppy = async (id:string, body:Puppy) => {\n    const updatedPuppy = createPuppy(body);\n    await init();\n    await puppies.updateOne({\"_id\": new ObjectId(id)}, {$set: updatedPuppy});\n    return updatedPuppy;\n};\n\nexport const deleteOnePuppy = async (id:string) => {\n    await init();\n    await puppies.deleteOne({\"_id\": new ObjectId(id)});\n};"]}